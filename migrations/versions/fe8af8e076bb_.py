"""empty message

Revision ID: fe8af8e076bb
Revises: 
Create Date: 2024-01-12 17:55:11.982118

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fe8af8e076bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('captcha',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=45), nullable=False),
    sa.Column('code', sa.String(length=6), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('manager',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('password', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=45), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('reader',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('fine', sa.DECIMAL(precision=6, scale=2), nullable=False),
    sa.Column('borrow_num', sa.Integer(), nullable=False, comment='一名读者最多只能借阅十本图书，且每本图书最多只能借两个月'),
    sa.CheckConstraint('borrow_num >= 0 AND borrow_num <= 10', name='check_reader_borrow_num'),
    sa.CheckConstraint('fine >= 0', name='check_fine'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('booktable',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('author', sa.String(length=100), nullable=False),
    sa.Column('ISBN', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Float(precision=10, asdecimal=2), nullable=False),
    sa.Column('publish', sa.String(length=100), nullable=False),
    sa.Column('pub_date', sa.Date(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('num', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('label', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ISBN'),
    sa.UniqueConstraint('label')
    )
    op.create_table('book',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.String(length=20), nullable=False),
    sa.Column('ISBN', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=20), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=False, comment='不外借 未借出 已预约 已借出'),
    sa.CheckConstraint("(location = '图书阅览室' AND status = '不外借') OR (location != '图书阅览室')", name='check_book_location_status'),
    sa.CheckConstraint('location in ("图书阅览室", "图书流通室")', name='check_book_location'),
    sa.CheckConstraint('status in ("不外借", "未借出", "已预约", "已借出")', name='check_book_status'),
    sa.ForeignKeyConstraint(['ISBN'], ['booktable.ISBN'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('book_id')
    )
    op.create_table('lend',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.String(length=20), nullable=True),
    sa.Column('reader_id', sa.Integer(), nullable=True),
    sa.Column('lend_date', sa.DateTime(), nullable=True),
    sa.Column('return_date', sa.DateTime(), nullable=True, comment='实际还书日期'),
    sa.Column('due_date', sa.DateTime(), nullable=True, comment='应还日期'),
    sa.Column('status', sa.String(length=10), nullable=True, comment='已还 未还  超期未还'),
    sa.CheckConstraint('status in ("未还", "已还", "超期未还")', name='check_lend_status'),
    sa.ForeignKeyConstraint(['book_id'], ['book.book_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reader_id'], ['reader.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reserve',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ISBN', sa.String(length=100), nullable=True),
    sa.Column('reader_id', sa.Integer(), nullable=True),
    sa.Column('reserve_date', sa.DateTime(), nullable=False, comment='预约日期'),
    sa.Column('reserve_deadline', sa.Integer(), nullable=False, comment='预约期限（天）'),
    sa.Column('book_id', sa.String(length=20), nullable=True),
    sa.CheckConstraint('reserve_deadline <= 10', name='check_reserve_deadline'),
    sa.ForeignKeyConstraint(['ISBN'], ['booktable.ISBN'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['book_id'], ['book.book_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reader_id'], ['reader.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reserve')
    op.drop_table('lend')
    op.drop_table('book')
    op.drop_table('booktable')
    op.drop_table('reader')
    op.drop_table('manager')
    op.drop_table('captcha')
    # ### end Alembic commands ###
